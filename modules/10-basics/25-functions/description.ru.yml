---

name: Функции
theory: |

  Функции в эликсире на первый взгляд похожи на функции обычных императивных языков. Но это только на первый. Как вы увидите дальше, они во многом устроены по другому, что сильно влияет на способ организации кода.

  Самый простой способ определить функцию – использовать конструкцию _def/do/end_:

  ```elixir
  defmodule Math
    # Имя записывается в snake_case
    def sum_of_values(a, b) do
      # Обычное сложение
      a + b
    end
  end

  # Функция вызывается без скобок!
  IO.puts Math.sum_of_values(5, 8) # => 13
  ```

  В Эликсире нет инструкции `return`, которая могла бы прервать выполнение кода. Результатом выполнения функции всегда является значение последнего вычисленного выражения. Если она пустая, то возвращается _nil_ это аналог _null_ из других языков.

  Другая особенность, функции можно вызывать без скобок. Несмотря на такую возможность, пользоваться ей нужно с осторожностью. Во вложенных вызовах такая запись становится не очевидной: `IO.puts IO.puts "huh"`.

  Для коротких функций, состоящих из одного выражения, Эликсир поддерживает специальный, сокращенный синтаксис объявления:

  ```elixir
  # Обратите внимание на запятую после описания сигнатуры функции и отсутствие end в конце
  def sum_of_values(a, b), do: a + b
  ```

  Если функция не принимает аргументов, то при ее определении можно не указывать скобок:

  ```elixir
  def hello do
    IO.puts("Hello, World!")
  end

  # или

  def hello, do: IO.puts("Hello, World!")
  ```

  Функции определяемые с помощью `def` доступны для вызова снаружи модуля. Но не все функции создаваемые внутри модуля, создаются для внешнего кода. Иногда функции выполняют вспомогательную роль для других функций этого же модуля. В такой ситуации функцию можно создать приватной заменив `def` на `defp`:

  ```elixir
  defmodule Solution
    # К функциям из того же модуля можно обращаться без указания модуля
    def hello, do: IO.puts(text_for_hello())

    defp text_for_hello, do: "Hello, World"
  end
  ```


instructions: |
  Наберите в редакторе код из задания символ в символ и нажмите «Проверить».

  ```elixir
  defmodule Solution do
    def hello do
      IO.puts "Hello, World!"
    end
  end
  ```

tips:
  - |
    [Стандарт кодирования](https://github.com/christopheradams/elixir_style_guide)
